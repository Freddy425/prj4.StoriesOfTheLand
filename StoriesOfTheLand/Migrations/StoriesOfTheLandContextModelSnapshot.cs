// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoriesOfTheLand.Data;

#nullable disable

namespace StoriesOfTheLand.Migrations
{
    [DbContext(typeof(StoriesOfTheLandContext))]
    partial class StoriesOfTheLandContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("StoriesOfTheLand.Models.FR_Resource", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FR_ResourceDescription")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("FR_ResourceTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("ResourceID");

                    b.ToTable("FR_Resource");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.FR_Specimen", b =>
                {
                    b.Property<int>("SpecimenID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FR_CulturalSignificance")
                        .IsRequired()
                        .HasMaxLength(3500)
                        .HasColumnType("TEXT");

                    b.Property<string>("FR_EnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FR_SpecimenDescription")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.HasKey("SpecimenID");

                    b.ToTable("FR_Specimen");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Faq", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Faq");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<int?>("SpecimenID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("FeedbackID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Media", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaPath")
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("SpecimenID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenID");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Resource", b =>
                {
                    b.Property<int>("ResourceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceImage")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceURL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("ResourceID");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Specimen", b =>
                {
                    b.Property<int>("SpecimenID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreeName")
                        .HasMaxLength(90)
                        .HasColumnType("TEXT");

                    b.Property<string>("CulturalSignificance")
                        .IsRequired()
                        .HasMaxLength(3500)
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("FR_ResourceResourceID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LatinName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double?>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("SpecimenDescription")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.HasKey("SpecimenID");

                    b.HasIndex("FR_ResourceResourceID");

                    b.ToTable("Specimen");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Sponsor", b =>
                {
                    b.Property<int>("SponsorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SponsorImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("SponsorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SponsorURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("SponsorID");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.UserImage", b =>
                {
                    b.Property<int>("UserImageiD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateUploaded")
                        .HasColumnType("TEXT");

                    b.Property<int>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaPath")
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.Property<bool>("status")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserImageiD");

                    b.ToTable("UserImage");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.FR_Specimen", b =>
                {
                    b.HasOne("StoriesOfTheLand.Models.Specimen", null)
                        .WithOne("FR_Specimen")
                        .HasForeignKey("StoriesOfTheLand.Models.FR_Specimen", "SpecimenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Media", b =>
                {
                    b.HasOne("StoriesOfTheLand.Models.Specimen", "Specimen")
                        .WithMany("MediaList")
                        .HasForeignKey("SpecimenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specimen");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Specimen", b =>
                {
                    b.HasOne("StoriesOfTheLand.Models.FR_Resource", "FR_Resource")
                        .WithMany()
                        .HasForeignKey("FR_ResourceResourceID");

                    b.Navigation("FR_Resource");
                });

            modelBuilder.Entity("StoriesOfTheLand.Models.Specimen", b =>
                {
                    b.Navigation("FR_Specimen");

                    b.Navigation("MediaList");
                });
#pragma warning restore 612, 618
        }
    }
}
